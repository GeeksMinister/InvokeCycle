@inject IJSRuntime JS;
@inject HttpClient Http;

<div class="Experiment2">
    <h3>Experiment 2</h3>
    <div class="component-group">
        <ChildComponent_1 OnClick=RandomTask />
        <ChildComponent_2 OnClick=RandomTask />
        <ChildComponent_3 OnClick=RandomTask />
        <ChildComponent_4 OnClick=RandomTask />
        <ChildComponent_5 OnClick=RandomTask />
    </div>
    <div class="button-control">
        <Button Text="Invoke RunActionMethod" OnClick=RunActionMethod />
        <Button Text="Invoke RunTaskMethod" OnClick=RunTaskMethod />
    </div>
</div>

@code
{
    private WeatherForecast[]? forecasts;

    private void RunActionMethod()
    {
        Console.WriteLine("--Important action started! --");
        Enumerable.Range(1, 300).ToList().ForEach(i => Console.WriteLine("Action running"));
        Console.WriteLine("--Important action Ended! --");
    }

    private bool PreventRender;
    protected override bool ShouldRender() => !PreventRender;
    private async Task RunTaskMethod()
    {
        // PreventRender = true;
        Console.WriteLine("--Important task started! --");
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
        await JS.LocalStorage_SetSerializedItem("weather-sample", forecasts);
        Console.WriteLine("--Important task Ended! --");
        // PreventRender = false;
    }

    private Task RandomTask() => Task.CompletedTask;
}



